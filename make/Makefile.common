ROOT=$(shell pwd)
MAKE_INSTALL:=$(MAKE) install
BUILDS=$(ROOT)/build

TARGET:=native
ifneq "$(TARGET)" "native"
    TARGET_BUILD_DIR=$(TARGET)
else
    TARGET_BUILD_DIR=$(shell uname -s|tr '[:upper:]' '[:lower:]').$(shell uname -m)
endif
BUILD:=$(BUILDS)/$(TARGET_BUILD_DIR)

LOGFILE=$(BUILD)/build.log
ERRFILE=$(BUILD)/build.err
DEPS=$(ROOT)/deps
OUTPUTDIR=$(BUILD)/data

CFLAGS:=$(CFLAGS) -Os -Wno-attributes
ifeq (,$(findstring mingw,$(TARGET)))
    CFLAGS:=$(CFLAGS) -fPIE
    ifneq (,$(findstring sparc,$(TARGET)))
        CFLAGS:=$(CFLAGS) -fPIC
    else
        CFLAGS:=$(CFLAGS) -fpic
    endif
endif

CPPFLAGS:=$(CPPFLAGS) -I$(BUILD)/include -DCURL_STATICLIB
CONFIG_FIXUP=cp $(ROOT)/mettle/config.guess $(ROOT)/mettle/config.sub . ;
CONFIGURE=configure --prefix=$(BUILD) --disable-shared ac_cv_path_PKGCONFIG=$(CWD)/pkg-config
CONFIGURE_STATIC=configure --prefix=$(BUILD) --static
ifneq "$(TARGET)" "native"
	HOST=$(TARGET)
endif
ifneq "$(HOST)" ""
    CONFIGURE:=$(CONFIGURE) --host=$(HOST)
endif

# if Debug is enabled, build with debug symbols
ifeq "$(D)" "1"
    CFLAGS:=$(CFLAGS) -g
endif

# Libraries cannot be compiled with -Werror due to the multiple compilation warnings.
# This would be probably a good idea to update them to their latest versions and see if these issues are fixed.
ENV:=$(ENV) ARFLAGS="cr" AR_FLAGS="cr" LDFLAGS="-L$(BUILD)/lib $(LDFLAGS)" CC="$(CC)" CPP="$(CPP)" AR="$(AR)" RANLIB="$(RANLIB)" CFLAGS="$(CFLAGS)" CPPFLAGS="$(CPPFLAGS)" OBJCFLAGS="$(OBJCFLAGS)"

# Adding strict flags for Mettle
CFLAGS:=$(CFLAGS) -Wall -Werror
ENV_METTLE:=$(ENV) ARFLAGS="cr" AR_FLAGS="cr" LDFLAGS="-L$(BUILD)/lib $(LDFLAGS)" CC="$(CC)" CPP="$(CPP)" AR="$(AR)" RANLIB="$(RANLIB)" CFLAGS="$(CFLAGS)" CPPFLAGS="$(CPPFLAGS)" OBJCFLAGS="$(OBJCFLAGS)"

LOGBUILD:=>>$(LOGFILE)
ifeq "$(V)" "1"
    LOGBUILD:=
endif
ifeq "$(VERBOSE)" "1"
    LOGBUILD:=
endif
